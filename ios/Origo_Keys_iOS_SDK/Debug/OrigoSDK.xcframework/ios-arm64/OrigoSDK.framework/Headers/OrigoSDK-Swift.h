#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 6.0 effective-5.10 (swiftlang-6.0.0.9.10 clang-1600.0.26.2)
#ifndef ORIGOSDK_SWIFT_H
#define ORIGOSDK_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#include <cstring>
#include <stdlib.h>
#include <new>
#include <type_traits>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#include <string.h>
#endif
#if defined(__cplusplus)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wnon-modular-include-in-framework-module"
#if defined(__arm64e__) && __has_include(<ptrauth.h>)
# include <ptrauth.h>
#else
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wreserved-macro-identifier"
# ifndef __ptrauth_swift_value_witness_function_pointer
#  define __ptrauth_swift_value_witness_function_pointer(x)
# endif
# ifndef __ptrauth_swift_class_method_pointer
#  define __ptrauth_swift_class_method_pointer(x)
# endif
#pragma clang diagnostic pop
#endif
#pragma clang diagnostic pop
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...) 
# endif
#endif
#if !defined(SWIFT_RUNTIME_NAME)
# if __has_attribute(objc_runtime_name)
#  define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
# else
#  define SWIFT_RUNTIME_NAME(X) 
# endif
#endif
#if !defined(SWIFT_COMPILE_NAME)
# if __has_attribute(swift_name)
#  define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
# else
#  define SWIFT_COMPILE_NAME(X) 
# endif
#endif
#if !defined(SWIFT_METHOD_FAMILY)
# if __has_attribute(objc_method_family)
#  define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
# else
#  define SWIFT_METHOD_FAMILY(X) 
# endif
#endif
#if !defined(SWIFT_NOESCAPE)
# if __has_attribute(noescape)
#  define SWIFT_NOESCAPE __attribute__((noescape))
# else
#  define SWIFT_NOESCAPE 
# endif
#endif
#if !defined(SWIFT_RELEASES_ARGUMENT)
# if __has_attribute(ns_consumed)
#  define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
# else
#  define SWIFT_RELEASES_ARGUMENT 
# endif
#endif
#if !defined(SWIFT_WARN_UNUSED_RESULT)
# if __has_attribute(warn_unused_result)
#  define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
# else
#  define SWIFT_WARN_UNUSED_RESULT 
# endif
#endif
#if !defined(SWIFT_NORETURN)
# if __has_attribute(noreturn)
#  define SWIFT_NORETURN __attribute__((noreturn))
# else
#  define SWIFT_NORETURN 
# endif
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA 
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA 
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA 
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif
#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif
#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER 
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility) 
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED_OBJC)
# if __has_feature(attribute_diagnose_if_objc)
#  define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
# else
#  define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
# endif
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction 
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if !defined(SWIFT_INDIRECT_RESULT)
# define SWIFT_INDIRECT_RESULT __attribute__((swift_indirect_result))
#endif
#if !defined(SWIFT_CONTEXT)
# define SWIFT_CONTEXT __attribute__((swift_context))
#endif
#if !defined(SWIFT_ERROR_RESULT)
# define SWIFT_ERROR_RESULT __attribute__((swift_error_result))
#endif
#if defined(__cplusplus)
# define SWIFT_NOEXCEPT noexcept
#else
# define SWIFT_NOEXCEPT 
#endif
#if !defined(SWIFT_C_INLINE_THUNK)
# if __has_attribute(always_inline)
# if __has_attribute(nodebug)
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline)) __attribute__((nodebug))
# else
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline))
# endif
# else
#  define SWIFT_C_INLINE_THUNK inline
# endif
#endif
#if defined(_WIN32)
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL __declspec(dllimport)
#endif
#else
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL 
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(objc_modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import AuthenticationServices;
@import CoreLocation;
@import Foundation;
@import ObjectiveC;
@import PassKit;
@import UIKit;
#endif

#import <OrigoSDK/OrigoSDK.h>

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"
#pragma clang diagnostic ignored "-Wunsafe-buffer-usage"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="OrigoSDK",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)


@class OrigoKeysReader;

SWIFT_CLASS("_TtC8OrigoSDK16FavoriteCallBack")
@interface FavoriteCallBack : NSObject
@property (nonatomic) BOOL status;
@property (nonatomic) NSError * _Nullable error;
@property (nonatomic, copy) NSArray<OrigoKeysReader *> * _Nullable favoriteReaders;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC8OrigoSDK21FavoriteReaderManager")
@interface FavoriteReaderManager : NSObject
+ (FavoriteCallBack * _Nonnull)addFavoriteWithReader:(OrigoKeysReader * _Nonnull)reader SWIFT_WARN_UNUSED_RESULT;
+ (FavoriteCallBack * _Nonnull)deleteFavoriteWithReader:(OrigoKeysReader * _Nonnull)reader SWIFT_WARN_UNUSED_RESULT;
+ (FavoriteCallBack * _Nonnull)deleteAllFavoriteReaders SWIFT_WARN_UNUSED_RESULT;
+ (FavoriteCallBack * _Nonnull)listFavoriteReaders SWIFT_WARN_UNUSED_RESULT;
+ (OrigoKeysReader * _Nullable)getFavoriteReaderToConnectWithNearbyReaders:(NSArray<OrigoKeysReader *> * _Nonnull)nearbyReaders SWIFT_WARN_UNUSED_RESULT;
+ (OrigoKeysReader * _Nullable)calculateRSSIValueWithFavReaders:(NSArray<OrigoKeysReader *> * _Nullable)favReaders nearbyReaders:(NSArray<OrigoKeysReader *> * _Nonnull)nearbyReaders SWIFT_WARN_UNUSED_RESULT;
+ (NSArray<OrigoKeysReader *> * _Nullable)getPrioritizedNearByReadersWithNearbyReaders:(NSArray<OrigoKeysReader *> * _Nonnull)nearbyReaders SWIFT_WARN_UNUSED_RESULT;
+ (BOOL)isFavoriteReaderWithReader:(OrigoKeysReader * _Nonnull)reader SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



typedef SWIFT_ENUM(NSInteger, HTTPStatusCode, open) {
  HTTPStatusCodeKHTTPStatusCodeContinue = 100,
  HTTPStatusCodeKHTTPStatusCodeSwitchingProtocols = 101,
  HTTPStatusCodeKHTTPStatusCodeProcessing = 102,
  HTTPStatusCodeKHTTPStatusCodeOK = 200,
  HTTPStatusCodeKHTTPStatusCodeCreated = 201,
  HTTPStatusCodeKHTTPStatusCodeAccepted = 202,
  HTTPStatusCodeKHTTPStatusCodeNonAuthoritativeInformation = 203,
  HTTPStatusCodeKHTTPStatusCodeNoContent = 204,
  HTTPStatusCodeKHTTPStatusCodeResetContent = 205,
  HTTPStatusCodeKHTTPStatusCodePartialContent = 206,
  HTTPStatusCodeKHTTPStatusCodeMultiStatus = 207,
  HTTPStatusCodeKHTTPStatusCodeAlreadyReported = 208,
  HTTPStatusCodeKHTTPStatusCodeIMUsed = 226,
  HTTPStatusCodeKHTTPStatusCodeLowOnStorageSpace = 250,
  HTTPStatusCodeKHTTPStatusCodeMultipleChoices = 300,
  HTTPStatusCodeKHTTPStatusCodeMovedPermanently = 301,
  HTTPStatusCodeKHTTPStatusCodeFound = 302,
  HTTPStatusCodeKHTTPStatusCodeSeeOther = 303,
  HTTPStatusCodeKHTTPStatusCodeNotModified = 304,
  HTTPStatusCodeKHTTPStatusCodeUseProxy = 305,
  HTTPStatusCodeKHTTPStatusCodeSwitchProxy = 306,
  HTTPStatusCodeKHTTPStatusCodeTemporaryRedirect = 307,
  HTTPStatusCodeKHTTPStatusCodePermanentRedirect = 308,
  HTTPStatusCodeKHTTPStatusCodeBadRequest = 400,
  HTTPStatusCodeKHTTPStatusCodeUnauthorized = 401,
  HTTPStatusCodeKHTTPStatusCodePaymentRequired = 402,
  HTTPStatusCodeKHTTPStatusCodeForbidden = 403,
  HTTPStatusCodeKHTTPStatusCodeNotFound = 404,
  HTTPStatusCodeKHTTPStatusCodeMethodNotAllowed = 405,
  HTTPStatusCodeKHTTPStatusCodeNotAcceptable = 406,
  HTTPStatusCodeKHTTPStatusCodeProxyAuthenticationRequired = 407,
  HTTPStatusCodeKHTTPStatusCodeRequestTimeout = 408,
  HTTPStatusCodeKHTTPStatusCodeConflict = 409,
  HTTPStatusCodeKHTTPStatusCodeGone = 410,
  HTTPStatusCodeKHTTPStatusCodeLengthRequired = 411,
  HTTPStatusCodeKHTTPStatusCodePreconditionFailed = 412,
  HTTPStatusCodeKHTTPStatusCodeRequestEntityTooLarge = 413,
  HTTPStatusCodeKHTTPStatusCodeRequestURITooLong = 414,
  HTTPStatusCodeKHTTPStatusCodeUnsupportedMediaType = 415,
  HTTPStatusCodeKHTTPStatusCodeRequestedRangeNotSatisfiable = 416,
  HTTPStatusCodeKHTTPStatusCodeExpectationFailed = 417,
  HTTPStatusCodeKHTTPStatusCodeIAmATeapot = 418,
  HTTPStatusCodeKHTTPStatusCodeEnhanceYourCalm = 420,
  HTTPStatusCodeKHTTPStatusCodeUnprocessableEntity = 422,
  HTTPStatusCodeKHTTPStatusCodeLocked = 423,
  HTTPStatusCodeKHTTPStatusCodeFailedDependency = 424,
  HTTPStatusCodeKHTTPStatusCodeUnorderedCollection = 425,
  HTTPStatusCodeKHTTPStatusCodeUpgradeRequired = 426,
  HTTPStatusCodeKHTTPStatusCodePreconditionRequired = 428,
  HTTPStatusCodeKHTTPStatusCodeTooManyRequests = 429,
  HTTPStatusCodeKHTTPStatusCodeRequestHeaderFieldsTooLarge = 431,
  HTTPStatusCodeKHTTPStatusCodeNoResponse = 444,
  HTTPStatusCodeKHTTPStatusCodeRetryWith = 449,
  HTTPStatusCodeKHTTPStatusCodeBlockedByWindowsParentalControls = 450,
  HTTPStatusCodeKHTTPStatusCodeParameterNotUnderstood = 451,
  HTTPStatusCodeKHTTPStatusCodeConferenceNotFound = 452,
  HTTPStatusCodeKHTTPStatusCodeNotEnoughBandwidth = 453,
  HTTPStatusCodeKHTTPStatusCodeSessionNotFound = 454,
  HTTPStatusCodeKHTTPStatusCodeMethodNotValidInThisState = 455,
  HTTPStatusCodeKHTTPStatusCodeHeaderFieldNotValidForResource = 456,
  HTTPStatusCodeKHTTPStatusCodeInvalidRange = 457,
  HTTPStatusCodeKHTTPStatusCodeParameterIsReadOnly = 458,
  HTTPStatusCodeKHTTPStatusCodeAggregateOperationNotAllowed = 459,
  HTTPStatusCodeKHTTPStatusCodeOnlyAggregateOperationAllowed = 460,
  HTTPStatusCodeKHTTPStatusCodeUnsupportedTransport = 461,
  HTTPStatusCodeKHTTPStatusCodeDestinationUnreachable = 462,
  HTTPStatusCodeKHTTPStatusCodeRequestHeaderTooLarge = 494,
  HTTPStatusCodeKHTTPStatusCodeCertError = 495,
  HTTPStatusCodeKHTTPStatusCodeNoCert = 496,
  HTTPStatusCodeKHTTPStatusCodeHTTPToHTTPS = 497,
  HTTPStatusCodeKHTTPStatusCodeClientClosedRequest = 499,
  HTTPStatusCodeKHTTPStatusCodeInternalServerError = 500,
  HTTPStatusCodeKHTTPStatusCodeNotImplemented = 501,
  HTTPStatusCodeKHTTPStatusCodeBadGateway = 502,
  HTTPStatusCodeKHTTPStatusCodeServiceUnavailable = 503,
  HTTPStatusCodeKHTTPStatusCodeGatewayTimeout = 504,
  HTTPStatusCodeKHTTPStatusCodeHTTPVersionNotSupported = 505,
  HTTPStatusCodeKHTTPStatusCodeVariantAlsoNegotiates = 506,
  HTTPStatusCodeKHTTPStatusCodeInsufficientStorage = 507,
  HTTPStatusCodeKHTTPStatusCodeLoopDetected = 508,
  HTTPStatusCodeKHTTPStatusCodeBandwidthLimitExceeded = 509,
  HTTPStatusCodeKHTTPStatusCodeNotExtended = 510,
  HTTPStatusCodeKHTTPStatusCodeNetworkAuthenticationRequired = 511,
  HTTPStatusCodeKHTTPStatusCodeOptionNotSupported = 551,
  HTTPStatusCodeKHTTPStatusCodeNetworkReadTimeoutError = 598,
  HTTPStatusCodeKHTTPStatusCodeNetworkConnectTimeoutError = 599,
  HTTPStatusCodeKHTTPOrigoUserNotFound = 700,
  HTTPStatusCodeKHTTPOrigoOrgNotFound = 701,
  HTTPStatusCodeKHTTPOrigoCredentialInventLow = 702,
  HTTPStatusCodeKHTTPOrigoOrgMigrationInProgress = 703,
  HTTPStatusCodeKHTTPOrigoSubscribeNotActive = 704,
  HTTPStatusCodeKHTTPOrigoPassTemplateNotFound = 705,
  HTTPStatusCodeKHTTPOrigoSSOAccessTokenExpired = 706,
  HTTPStatusCodeKHTTPOrigoSSOAccessTokenInvalid = 707,
  HTTPStatusCodeKHTTPOrigoSSOAccessTokenInvalidIssuer = 708,
  HTTPStatusCodeKHTTPOrigoSSOAccessTokenRoleNotAvailable = 709,
  HTTPStatusCodeKHTTPStatusCodeUnsupportedService = 710,
  HTTPStatusCodeKHTTPStatusCodeIssuanceTokenExpired = 711,
  HTTPStatusCodeKHTTPOrigoInvalidDateTime = 712,
  HTTPStatusCodeKHTTPOrigoInvalidIssuanceToken = 901,
  HTTPStatusCodeKHTTPStatusCodeDefault = 1355,
  HTTPStatusCodeKHTTPOrigoEnvironmentMismatchError = 12234,
  HTTPStatusCodeKHTTPStatusCodeMultipleLocationServicesNotSupported = 12235,
};

@class NSString;

SWIFT_CLASS("_TtC8OrigoSDK23IssuanceTokenParameters")
@interface IssuanceTokenParameters : NSObject
- (nonnull instancetype)initWithIssuanceToken:(NSString * _Nonnull)issuanceToken codeHash:(NSString * _Nonnull)codeHash appId:(NSString * _Nonnull)appId sdkVersion:(NSString * _Nonnull)sdkVersion pushId:(NSString * _Nonnull)pushId deviceModel:(NSString * _Nonnull)deviceModel isNFC:(BOOL)isNFC environment:(OrigoEnvironmentType)environment OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end




@class OrigoKeysManager;

SWIFT_CLASS("_TtC8OrigoSDK20NearbyReaderDetector")
@interface NearbyReaderDetector : NSObject
- (nonnull instancetype)initWithUseReaderGeofencing:(BOOL)useReaderGeofencing keysManager:(OrigoKeysManager * _Nonnull)keysManager OBJC_DESIGNATED_INITIALIZER;
- (void)configLocationService;
- (void)saveReaderScanDataWithScanMode:(NSInteger)scanMode openingType:(NSArray<NSNumber *> * _Nonnull)openingType lockServiceCode:(NSArray<NSNumber *> * _Nonnull)lockServiceCode;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@interface NearbyReaderDetector (SWIFT_EXTENSION(OrigoSDK)) <UIApplicationDelegate>
- (void)handleApplicationObserver;
@end


@interface NearbyReaderDetector (SWIFT_EXTENSION(OrigoSDK))
- (void)registerSuccessfulUsageOf:(OrigoKeysReader * _Nullable)reader;
@end

@class CLLocationManager;
@class CLRegion;
@class CLVisit;
@class CLHeading;
@class CLLocation;

@interface NearbyReaderDetector (SWIFT_EXTENSION(OrigoSDK)) <CLLocationManagerDelegate>
- (void)locationManager:(CLLocationManager * _Nonnull)manager didStartMonitoringForRegion:(CLRegion * _Nonnull)region;
- (void)locationManager:(CLLocationManager * _Nonnull)manager didDetermineState:(CLRegionState)state forRegion:(CLRegion * _Nonnull)region;
- (void)locationManager:(CLLocationManager * _Nonnull)manager didVisit:(CLVisit * _Nonnull)visit;
- (void)locationManager:(CLLocationManager * _Nonnull)manager didFinishDeferredUpdatesWithError:(NSError * _Nullable)error;
- (void)locationManagerDidResumeLocationUpdates:(CLLocationManager * _Nonnull)manager;
- (void)locationManagerDidPauseLocationUpdates:(CLLocationManager * _Nonnull)manager;
- (BOOL)locationManagerShouldDisplayHeadingCalibration:(CLLocationManager * _Nonnull)manager SWIFT_WARN_UNUSED_RESULT;
- (void)locationManager:(CLLocationManager * _Nonnull)manager didUpdateHeading:(CLHeading * _Nonnull)newHeading;
- (void)locationManager:(CLLocationManager * _Nonnull)manager didFailWithError:(NSError * _Nonnull)error;
- (void)locationManager:(CLLocationManager * _Nonnull)manager monitoringDidFailForRegion:(CLRegion * _Nullable)region withError:(NSError * _Nonnull)error;
- (void)locationManager:(CLLocationManager * _Nonnull)manager didEnterRegion:(CLRegion * _Nonnull)region;
- (void)locationManager:(CLLocationManager * _Nonnull)manager didExitRegion:(CLRegion * _Nonnull)region;
- (void)locationManager:(CLLocationManager * _Nonnull)manager didUpdateLocations:(NSArray<CLLocation *> * _Nonnull)locations;
@end


SWIFT_CLASS("_TtC8OrigoSDK26OrigoAuthorizationProvider")
@interface OrigoAuthorizationProvider : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
+ (void)presentAuthorizationRequestWithCompletion:(void (^ _Nonnull)(BOOL, NSError * _Nullable))completion;
@end


SWIFT_CLASS("_TtC8OrigoSDK21OrigoDataProviderBase")
@interface OrigoDataProviderBase : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class NSDictionary;

SWIFT_CLASS("_TtC8OrigoSDK17OrigoDataProvider")
@interface OrigoDataProvider : OrigoDataProviderBase
+ (void)isAppNameValid:(NSString * _Nonnull)name environment:(OrigoEnvironmentType)environment completion:(void (^ _Nonnull)(BOOL, NSError * _Nullable))completion;
+ (void)getIssuanceToken:(IssuanceTokenParameters * _Nonnull)parameters completion:(void (^ _Nonnull)(BOOL, NSDictionary * _Nonnull, NSError * _Nullable))completion;
+ (void)getIssuanceDataWithOrigoEnvironment:(OrigoEnvironmentType)origoEnvironment appName:(NSString * _Nonnull)appName completion:(void (^ _Nonnull)(BOOL, NSString * _Nonnull, NSError * _Nullable))completion;
+ (void)getReaderList:(NSString * _Nonnull)appId completion:(void (^ _Nonnull)(NSArray<NSString *> * _Nullable, NSError * _Nullable))completion;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@class UILongPressGestureRecognizer;

SWIFT_CLASS("_TtC8OrigoSDK33OrigoEnvironmentSelectionProvider")
@interface OrigoEnvironmentSelectionProvider : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
+ (void)registerForGesture;
+ (void)onViewLongPressedWithRecognizer:(UILongPressGestureRecognizer * _Nonnull)recognizer;
@end

enum OrigoKeysNetworkErrorCode : NSInteger;

SWIFT_CLASS("_TtC8OrigoSDK19OrigoErrorConverter")
@interface OrigoErrorConverter : NSObject
+ (NSError * _Nonnull)origoErrorWith:(enum HTTPStatusCode)httpErrorCode withNestedError:(NSError * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
+ (NSError * _Nonnull)origoSecureElementErrorHandlerWithError:(NSError * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
+ (NSError * _Nonnull)origoPassKitErrorHandlerWithError:(NSError * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
+ (enum OrigoKeysNetworkErrorCode)toErrorCodeFromHttpErrorStatus:(enum HTTPStatusCode)httpErrorCode SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@protocol MelAnalyticsBaseAPI;

@interface OrigoKeysManager (SWIFT_EXTENSION(OrigoSDK))
/// Creates and returns object of MelAnalytcsBaseAPI
+ (id <MelAnalyticsBaseAPI> _Nullable)setupMelAnalyticsWithAppId:(NSString * _Nonnull)appId apiKey:(NSString * _Nonnull)apiKey invitationHashCode:(NSString * _Nonnull)invitationHashCode SWIFT_WARN_UNUSED_RESULT;
@end

typedef SWIFT_ENUM(NSInteger, OrigoKeysNetworkErrorCode, open) {
/// 10099, An internal error occurred | Retry or contact the key administrator if problem persists..
  OrigoKeysNetworkErrorCodeErrorCodeInternal = 10099,
/// 10703, The server communication failed due to some temperary reasons | Check internet connectivity or try again later.
  OrigoKeysNetworkErrorCodeErrorCodeTemporarilyServerNotReachable = 10703,
/// 10702, The server communication failed. This is normally because of a network problem. | Check internet connectivity or try again later.
  OrigoKeysNetworkErrorCodeErrorCodeServerUnreachable = 10702,
/// 10701, Server replied API INCOMPATIBLE. The TSM reported that the current version of the SDK is too old. | upgrade the application.
  OrigoKeysNetworkErrorCodeErrorCodeSDKIncompatible = 10701,
/// 15902, Server replied with status saying the app name is invalid. | Contact HID and ensure the right app name is used to redeem the invitation code.
  OrigoKeysNetworkErrorCodeApplicationNameNotAvailable = 15902,
/// Description: The Origo server reported that the issuance token was invalid.
/// Recommended action: Retype or contact the key administrator.
  OrigoKeysNetworkErrorCodeOrigoInvalidIssuanceToken = 901,
/// Description: No error occurred. This is internal to Origo
/// Recommended action: No action needed
  OrigoKeysNetworkErrorCodeOrigoEnvironmentMisMatchError = 12234,
/// Description: Multiple Location Service not supported.
/// Recommended action: To redeem second Issuance token, user need to uninstall app and redeem the new token
  OrigoKeysNetworkErrorCodeOrigoMultipleLocationServicesNotSupported = 12235,
/// Description: HID Identity Positioning Sub Type Not Supported.
/// Recommended action: Check all pod dependencies, Specifically make sure “OrigoNAOSDK” is added for OIP
  OrigoKeysNetworkErrorCodeOrigoIdentityPositioningSubTypeNotSupported = 12236,
/// Description: The Origo server reported that user not found.
/// Recommended action: create user in the system or contact administrator.
  OrigoKeysNetworkErrorCodeOrigoKeysErrorCodeUserNotFound = 23100,
/// Description: The Origo server reported that org not found.
/// Recommended action: create Organization in the system or contact administrator.
  OrigoKeysNetworkErrorCodeOrigoKeysErrorCodeOrgNotFound = 23101,
/// Description: The Origo server reported that credential inventory is low.
/// Recommended action: contact administrator.
  OrigoKeysNetworkErrorCodeOrigoKeysErrorCodeCredentialInventoryLow = 23102,
/// Description: The Origo server reported that migration in progress.
/// Recommended action: contact administrator.
  OrigoKeysNetworkErrorCodeOrigoKeysErrorCodeMigrationInProgress = 23103,
/// Description: The Origo server reported that subscription not active.
/// Recommended action: contact administrator.
  OrigoKeysNetworkErrorCodeOrigoKeysErrorCodeSubscriptionNotActive = 23104,
/// Description: The Origo server reported that pass template not found.
/// Recommended action: Re-check the org configuration or contact administrator.
  OrigoKeysNetworkErrorCodeOrigoKeysErrorCodePassTemplateNotFound = 23105,
/// Description: The Origo server reported that SSO Access token expired for the current session.
/// Recommended action: Sign in again to get the latest Access token.
  OrigoKeysNetworkErrorCodeOrigoKeysErrorCodeSSOAccessTokenExpired = 23106,
/// Description: The Origo server reported that SSO Access token is invalid.
/// Recommended action: Sign in again to get the latest Access token.
  OrigoKeysNetworkErrorCodeOrigoKeysErrorCodeSSOAccessTokenInvalid = 23107,
/// Description: The Origo server reported that SSO Access token is not issued from trusted issuer.
/// Recommended action: Contact administrator.
  OrigoKeysNetworkErrorCodeOrigoKeysErrorCodeSSOAccessTokenInvalidIssuer = 23108,
/// Description: The Origo server reported that Role not available in the Access token
/// Recommended action: Contact administrator.
  OrigoKeysNetworkErrorCodeOrigoKeysErrorCodeSSOAccessTokenRoleNotAvailable = 23109,
/// Description: The Origo server reported that service opted is not available in the Access token
/// Recommended action: Contact administrator.
  OrigoKeysNetworkErrorCodeOrigoKeysErrorCodeUnSupportedService = 23110,
/// Description: The Origo server reported that service that issuance token is expired.
  OrigoKeysNetworkErrorCodeIssuanceTokenExpired = 23111,
/// Description: User might changed the device date and time. User device date time should match with server date time in UTC.
  OrigoKeysNetworkErrorCodeErrorCodeInvalidDateTime = 23112,
};

/// OrigoKeysPassKitErrorCode -  Error list of the passkit scenarios.
typedef SWIFT_ENUM(NSInteger, OrigoKeysPassKitErrorCode, open) {
/// 15903, Unknown error.
  OrigoKeysPassKitErrorCodePassKitUnknownError = 15903,
/// 15904, Invalid pass data..
  OrigoKeysPassKitErrorCodePassKitInvalidDataError = 15904,
/// 15905, Unsupported pass version.
  OrigoKeysPassKitErrorCodePassKitUnsupportedVersionError = 15905,
/// 15906, Invalid pass signature.
  OrigoKeysPassKitErrorCodePassKitInvalidSignature = 15906,
/// 15907, Error caused by absence of the required entitlements for the given operation.
  OrigoKeysPassKitErrorCodePassKitNotEntitledError = 15907,
};

/// OrigoKeysSecureElementAddPassErrorCode - An error object that PassKit uses when it adds Secure Element passes.
typedef SWIFT_ENUM(NSInteger, OrigoKeysSecureElementAddPassErrorCode, open) {
/// 15920, The system canceled adding the pass due to an unknown failure.
  OrigoKeysSecureElementAddPassErrorCodeSecureElementUnknownError = 15920,
/// 15921, The user canceled adding the pass.
  OrigoKeysSecureElementAddPassErrorCodeSecureElementUserCanceledError = 15921,
/// 15922, Provisioning for secure element passes isn’t available on the device, or the app is missing the entitlement.
  OrigoKeysSecureElementAddPassErrorCodeSecureElementUnavailableError = 15922,
/// 15923, The configuration for the pass is invalid for either Wallet or the reader.
  OrigoKeysSecureElementAddPassErrorCodeSecureElementInvalidConfigurationError = 15923,
/// 15924, The reader for the pass isn’t supported or has an invalid version.
  OrigoKeysSecureElementAddPassErrorCodeSecureElementDeviceNotSupportedError = 15924,
/// 15925, The reader for the pass isn’t ready to start pairing.
  OrigoKeysSecureElementAddPassErrorCodeSecureElementDeviceNotReadyError = 15925,
/// 15926, The mobile operating system is not supported
  OrigoKeysSecureElementAddPassErrorCodeSecureElementOSVersionNotSupportedError = 15926,
};


SWIFT_CLASS("_TtC8OrigoSDK24OrigoLocationDataHandler")
@interface OrigoLocationDataHandler : NSObject
+ (OrigoLocationDataHandler * _Nonnull)sharedInstance SWIFT_WARN_UNUSED_RESULT;
- (void)startLocationDataCollection;
- (void)stopLocationDataCollection;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface OrigoLocationDataHandler (SWIFT_EXTENSION(OrigoSDK))
+ (NSArray<NSString *> * _Nonnull)siteIDList SWIFT_WARN_UNUSED_RESULT;
@end


@interface OrigoLocationDataHandler (SWIFT_EXTENSION(OrigoSDK))
- (void)addReader:(NSArray<NSString *> * _Nonnull)psnList;
@end




@interface OrigoLocationDataHandler (SWIFT_EXTENSION(OrigoSDK))
- (void)cancelSyncAllLocation;
- (void)postAllLocationData:(BOOL)shouldRetry withCompletion:(void (^ _Nullable)(void))completion;
- (void)syncLocationData;
@end


@class NSError;

@interface OrigoLocationDataHandler (SWIFT_EXTENSION(OrigoSDK))
- (void)deregisterIdentityPositioning:(NSString * _Nonnull)appId completion:(void (^ _Nonnull)(OrigoIdentityPositioningTerminationStatus, NSError * _Nullable))completion;
- (void)getPassStatus:(NSString * _Nonnull)appId;
@end

@protocol OrigoLocationSyncDelegate;

@interface OrigoLocationDataHandler (SWIFT_EXTENSION(OrigoSDK))
- (void)addRegion:(NSInteger)regionId;
- (void)updateSiteID:(NSString * _Nonnull)siteID;
- (void)removeSiteID:(NSString * _Nonnull)siteID;
- (void)removeRegion:(NSInteger)regionId;
- (void)addLocation:(CLLocation * _Nonnull)location;
- (void)setProgessDelegate:(id <OrigoLocationSyncDelegate> _Nonnull)delegate;
@end


SWIFT_PROTOCOL("_TtP8OrigoSDK25OrigoLocationSyncDelegate_")
@protocol OrigoLocationSyncDelegate
- (void)didFinishLocationUpload:(BOOL)success;
- (void)didReachDataRetention;
- (void)didReceiveRevokedPassCode;
- (void)sendMixpanelEventForRevoke;
- (void)didReachMaxLocationThreshold;
- (void)didFoundInvalidDateTime:(NSError * _Nonnull)error;
- (void)didUpdatedCredential;
@end

@class NSURL;

SWIFT_CLASS("_TtC8OrigoSDK11OrigoLogger")
@interface OrigoLogger : NSObject
+ (void)setup;
+ (void)enableLogs:(BOOL)isEnable withPath:(NSURL * _Null_unspecified)withPath;
+ (void)logError:(NSError * _Nonnull)error;
+ (void)log:(NSString * _Nonnull)message;
+ (NSArray<NSURL *> * _Nonnull)getReportURL SWIFT_WARN_UNUSED_RESULT;
+ (void)walletStart;
+ (void)startMeasure;
+ (void)lapseInternal;
+ (void)endInternal;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC8OrigoSDK28OrigoManagedAppConfiguration")
@interface OrigoManagedAppConfiguration : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
+ (void)getMDMData;
+ (BOOL)getMDMEnabled SWIFT_WARN_UNUSED_RESULT;
+ (NSDictionary<NSString *, id> * _Nonnull)getManagedConfig SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC8OrigoSDK23OrigoOpenIDUserDefaults")
@interface OrigoOpenIDUserDefaults : NSObject
@property (nonatomic) NSInteger environmentCode;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC8OrigoSDK20OrigoSSOTokenStorage")
@interface OrigoSSOTokenStorage : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
+ (void)getSSOTokenWithCompletionHandler:(void (^ _Nonnull)(NSString * _Nonnull, BOOL))completionHandler;
+ (void)removeSSOTokenWithCompletionHandler:(SWIFT_NOESCAPE void (^ _Nonnull)(BOOL, NSError * _Nullable))completionHandler;
@end


SWIFT_CLASS("_TtC8OrigoSDK23OrigoSecuredDataStorage")
@interface OrigoSecuredDataStorage : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
+ (void)registerDefaults:(NSDictionary<NSString *, id> * _Nonnull)values;
+ (void)storeFloatOnSDS:(float)value key:(NSString * _Nonnull)key;
+ (void)storeDoubleOnSDS:(double)value key:(NSString * _Nonnull)key;
+ (void)storeIntOnSDS:(int64_t)value key:(NSString * _Nonnull)key;
+ (void)storeBoolOnSDS:(BOOL)value key:(NSString * _Nonnull)key;
+ (void)storeStringOnSDS:(NSString * _Nonnull)value key:(NSString * _Nonnull)key;
@end

@class NSData;

@interface OrigoSecuredDataStorage (SWIFT_EXTENSION(OrigoSDK))
+ (void)savePhotoWithUrlString:(NSString * _Nonnull)urlString accessToken:(NSString * _Nonnull)accessToken uniqueIdentifier:(NSString * _Nonnull)uniqueIdentifier completionHandler:(void (^ _Nonnull)(NSData * _Nullable, NSError * _Nullable))completionHandler;
@end


@interface OrigoSecuredDataStorage (SWIFT_EXTENSION(OrigoSDK))
+ (void)storeArrayOfStrings:(NSArray<NSObject *> * _Nonnull)values key:(NSString * _Nonnull)key;
+ (NSArray<NSObject *> * _Nullable)fetchArrayOfStrings:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
@end



@interface OrigoSecuredDataStorage (SWIFT_EXTENSION(OrigoSDK))
+ (void)storeObjectOnSDS:(id _Nonnull)object key:(NSString * _Nonnull)key;
+ (void)updateObjectOnSDS:(id _Nonnull)object key:(NSString * _Nonnull)key;
+ (NSArray<NSData *> * _Nullable)fetchObjectsFromSDS:(NSInteger)limit key:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
+ (NSArray<NSData *> * _Nullable)fetchAllObjectsFromSDS:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
+ (void)removeObjectsFromSDSWithLimit:(NSInteger)limit key:(NSString * _Nonnull)key;
@end


@interface OrigoSecuredDataStorage (SWIFT_EXTENSION(OrigoSDK))
+ (void)removeValueFromSDS:(NSString * _Nonnull)key;
@end


@interface OrigoSecuredDataStorage (SWIFT_EXTENSION(OrigoSDK))
+ (float)fetchFloatFromSDS:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
+ (double)fetchDoubleFromSDS:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
+ (int64_t)fetchIntFromSDS:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
+ (BOOL)fetchBoolFromSDS:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nullable)fetchStringFromSDS:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
+ (void)getProvisionKeyChain:(NSString * _Nonnull)codeHash completion:(void (^ _Nonnull)(BOOL, NSDictionary * _Nonnull, NSError * _Nullable))completion;
+ (void)removeProvisionKeyChain:(NSString * _Nonnull)codeHash completion:(void (^ _Nonnull)(BOOL, NSError * _Nullable))completion;
@end


SWIFT_CLASS("_TtC8OrigoSDK23OrigoSecuredFileStorage")
@interface OrigoSecuredFileStorage : NSObject
+ (void)savePhotoImageWithUrlString:(NSString * _Nonnull)urlString accessToken:(NSString * _Nonnull)accessToken completionHandler:(void (^ _Nonnull)(NSData * _Nullable, NSError * _Nullable))completionHandler;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC8OrigoSDK23OrigoSymmetricKeyHelper")
@interface OrigoSymmetricKeyHelper : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class PKPass;
@class PKSecureElementPass;

SWIFT_CLASS("_TtC8OrigoSDK11OrigoWallet") SWIFT_AVAILABILITY(ios,introduced=14.0)
@interface OrigoWallet : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
+ (BOOL)isSecureElementAvailable SWIFT_WARN_UNUSED_RESULT;
+ (void)addPass:(NSDictionary * _Nullable)data codeHash:(NSString * _Nullable)codeHash completion:(void (^ _Nonnull)(NSArray * _Nonnull, NSError * _Nullable))completion;
+ (BOOL)isWindowAvailable SWIFT_WARN_UNUSED_RESULT;
+ (NSArray<PKPass *> * _Nonnull)getPKPasses SWIFT_WARN_UNUSED_RESULT;
+ (NSArray<PKSecureElementPass *> * _Nonnull)getPKRemotePasses SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC8OrigoSDK11PassKitUtil")
@interface PassKitUtil : NSObject
+ (void)suppressApplePay;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class NSCoder;

SWIFT_CLASS("_TtC8OrigoSDK14ReaderScanData")
@interface ReaderScanData : NSObject <NSCoding>
- (nonnull instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder;
- (void)encodeWithCoder:(NSCoder * _Nonnull)aCoder;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC8OrigoSDK15SequenceUtility")
@interface SequenceUtility : NSObject
+ (NSArray<NSString *> * _Nonnull)getSubtractedFromList:(NSArray<NSString *> * _Nonnull)list1 withList:(NSArray<NSString *> * _Nonnull)list2 SWIFT_WARN_UNUSED_RESULT;
+ (NSArray<NSString *> * _Nonnull)getIntersectionFromList:(NSArray<NSString *> * _Nonnull)list1 withList:(NSArray<NSString *> * _Nonnull)list2 SWIFT_WARN_UNUSED_RESULT;
+ (NSArray<NSString *> * _Nonnull)convertWithList:(NSArray * _Nonnull)list withField:(NSString * _Nonnull)field SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@class ASWebAuthenticationSession;

@interface UIWindow (SWIFT_EXTENSION(OrigoSDK)) <ASWebAuthenticationPresentationContextProviding>
- (ASPresentationAnchor _Nonnull)presentationAnchorForWebAuthenticationSession:(ASWebAuthenticationSession * _Nonnull)session SWIFT_WARN_UNUSED_RESULT SWIFT_AVAILABILITY(ios,introduced=13.0);
@end




@class PKAddSecureElementPassViewController;
@class NSBundle;

SWIFT_CLASS("_TtC8OrigoSDK24WalletPassViewController") SWIFT_AVAILABILITY(ios,introduced=13.4)
@interface WalletPassViewController : UIViewController <PKAddSecureElementPassViewControllerDelegate>
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)addSecureElementPassViewController:(PKAddSecureElementPassViewController * _Nonnull)controller didFinishAddingSecureElementPass:(PKSecureElementPass * _Nullable)pass error:(NSError * _Nullable)error;
- (void)addSecureElementPassViewController:(PKAddSecureElementPassViewController * _Nonnull)controller didFinishAddingSecureElementPasses:(NSArray<PKSecureElementPass *> * _Nullable)passes error:(NSError * _Nullable)error;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end


SWIFT_EXTERN void debugger_callback(void) SWIFT_NOEXCEPT;


SWIFT_EXTERN void hooking_callback(void) SWIFT_NOEXCEPT;


SWIFT_EXTERN void jailbreak_callback(void) SWIFT_NOEXCEPT;

#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#if defined(__cplusplus)
#endif
#pragma clang diagnostic pop
#endif

#else
#error unsupported Swift architecture
#endif

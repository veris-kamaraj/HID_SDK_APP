require File.join(File.dirname(`node --print "require.resolve('expo/package.json')"`), "scripts/autolinking")
require File.join(File.dirname(`node --print "require.resolve('react-native/package.json')"`), "scripts/react_native_pods")

require 'json'
podfile_properties = JSON.parse(File.read(File.join(__dir__, 'Podfile.properties.json'))) rescue {}

ENV['RCT_NEW_ARCH_ENABLED'] = '0' if podfile_properties['newArchEnabled'] == 'false'
ENV['EX_DEV_CLIENT_NETWORK_INSPECTOR'] = podfile_properties['EX_DEV_CLIENT_NETWORK_INSPECTOR']

platform :ios, podfile_properties['ios.deploymentTarget'] || '15.1'
install! 'cocoapods',
  :deterministic_uuids => false

prepare_react_native_project!
def applibs
 pod 'OrigoSDK-Debug', :configuration => ['Debug'], :path  => 'Dependencies/Origo_Keys_iOS_SDK/Debug/OrigoSDK-Debug.podspec'
pod 'OrigoSDK-Release', :configuration => ['Release'], :path  => 'Dependencies/Origo_Keys_iOS_SDK/Release/OrigoSDK-Release.podspec'
pod 'SeosMobileKeysSDK-Debug', :configuration => ['Debug'], :path  => 'Dependencies/Origo_Keys_iOS_SDK/Debug/SeosMobileKeysSDK-Debug.podspec'
pod 'SeosMobileKeysSDK-Release', :configuration => ['Release'], :path  => 'Dependencies/Origo_Keys_iOS_SDK/Release/SeosMobileKeysSDK-Release.podspec'
pod 'OrigoNAOSDK-Debug', :configuration => ['Debug'], :path  => 'Dependencies/Origo_Keys_iOS_SDK/Debug/OrigoNAOSDK-Debug.podspec'
 pod 'OrigoNAOSDK-Release', :configuration => ['Release'], :path  => 'Dependencies/Origo_Keys_iOS_SDK/Release/OrigoNAOSDK-Release.podspec'
pod 'OrigoMelSDK-Debug', :configuration => ['Debug'], :path  => 'Dependencies/Origo_Keys_iOS_SDK/Debug/OrigoMelSDK-Debug.podspec'
pod 'OrigoMelSDK-Release', :configuration => ['Release'], :path  => 'Dependencies/Origo_Keys_iOS_SDK/Release/OrigoMelSDK-Release.podspec'
end

target 'HID' do
  use_expo_modules!

  if ENV['EXPO_USE_COMMUNITY_AUTOLINKING'] == '1'
    config_command = ['node', '-e', "process.argv=['', '', 'config'];require('@react-native-community/cli').run()"];
  else
    config_command = [
      'npx',
      'expo-modules-autolinking',
      'react-native-config',
      '--json',
      '--platform',
      'ios'
    ]
    applibs
  end

  config = use_native_modules!(config_command)

  # use_frameworks! :linkage => podfile_properties['ios.useFrameworks'].to_sym if podfile_properties['ios.useFrameworks']
  # use_frameworks! :linkage => ENV['USE_FRAMEWORKS'].to_sym if ENV['USE_FRAMEWORKS']
  use_frameworks! :linkage => :dynamic
  use_react_native!(
    :path => config[:reactNativePath],
    :hermes_enabled => podfile_properties['expo.jsEngine'] == nil || podfile_properties['expo.jsEngine'] == 'hermes',
    # An absolute path to your application root.
    :app_path => "#{Pod::Config.instance.installation_root}/..",
    :privacy_file_aggregation_enabled => podfile_properties['apple.privacyManifestAggregationEnabled'] != 'false',
  )

  post_install do |installer|
    react_native_post_install(
      installer,
      config[:reactNativePath],
      :mac_catalyst_enabled => false,
      :ccache_enabled => podfile_properties['apple.ccacheEnabled'] == 'true',
    )

    # This is necessary for Xcode 14, because it signs resource bundles by default
    # when building for devices.
    installer.target_installation_results.pod_target_installation_results
      .each do |pod_name, target_installation_result|
      target_installation_result.resource_bundle_targets.each do |resource_bundle_target|
        resource_bundle_target.build_configurations.each do |config|
          config.build_settings['CODE_SIGNING_ALLOWED'] = 'NO'
        end
      end
    end
  end
end

 def node_require(script)
   # Resolve script with node to allow for hoisting
  require Pod::Executable.execute_command('node', ['-p',
    "require.resolve(
      '#{script}',
       {paths: [process.argv[1]]},
     )", __dir__]).strip
 end

 node_require('react-native/scripts/react_native_pods.rb')
 node_require('react-native-permissions/scripts/setup.rb')

 setup_permissions([
  # 'AppTrackingTransparency',
  'Bluetooth',
  # 'Calendars',
  # 'CalendarsWriteOnly',
  # 'Camera',
  # 'Contacts',
  # 'FaceID',
  'LocationAccuracy',
  'LocationAlways',
  'LocationWhenInUse',
  # 'MediaLibrary',
  # 'Microphone',
  # 'Motion',
  'Notifications',
  # 'PhotoLibrary',
  # 'PhotoLibraryAddOnly',
  # 'Reminders',
  # 'Siri',
  # 'SpeechRecognition',
  # 'StoreKit',
])
